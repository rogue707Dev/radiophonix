stages:
    - test
    - build
    - deploy

#cache:
#    untracked: true
#    key: "$CI_PROJECT_ID"
#    paths:
#        - vendor/
#        - node_modules/
#        - .yarn

test:unit:
    stage: test
    image: edbizarro/gitlab-ci-pipeline-php:7.1-alpine-lts
    script:
        - apt-get update
        - apt-get -y install sqlite3 libsqlite3-dev
        - docker-php-ext-install pdo_sqlite
        - cp .env.testing .env
        - composer install --prefer-dist --quiet --no-interaction
        - touch storage/database.sqlite
        - php artisan key:generate
        - php artisan jwt:secret --force
        - vendor/bin/phpunit

build:staging:
    stage: build
    image: edbizarro/gitlab-ci-pipeline-php:7.1-alpine-lts
    only:
        - dev
    script:
        - node --version
#        - yarn config set cache-folder .yarn
        - yarn
        - echo "RADIOPHONIX_API_URL=https://dev.radiophonix.org/api/v1/" > .env
        - npm run build
        - composer install --prefer-dist --quiet --no-interaction
        - mkdir artefacts
        - tar -jcf artefacts/radiophonix.tar.bz2 --exclude=./artefacts --exclude=./node_modules --exclude=./.yarn --exclude=./tests --exclude=./.git --exclude=./server.php .
    artifacts:
        paths:
            - ./artefacts/radiophonix.tar.bz2
        expire_in: 1 week

build:review:
    stage: build
    image: edbizarro/gitlab-ci-pipeline-php:7.1-alpine-lts
    only:
        - branches
    except:
        - master
        - dev
    environment:
        name: review/$CI_COMMIT_REF_NAME
        url: http://$CI_ENVIRONMENT_SLUG.radiophonix.org
    script:
        - node --version
#        - yarn config set cache-folder .yarn
        - yarn
        - echo -n 'RADIOPHONIX_API_URL=http://' > .env
        - echo -n $CI_ENVIRONMENT_SLUG >> .env
        - echo -n '.radiophonix.org/api/v1/' >> .env
        - npm run build
        - php composer.phar install --prefer-dist --quiet --no-interaction
        - mkdir artefacts
        - tar -jcf artefacts/radiophonix.tar.bz2 --exclude=./artefacts --exclude=./node_modules --exclude=./.yarn --exclude=./tests --exclude=./.git --exclude=./server.php .
    artifacts:
        paths:
            - ./artefacts/radiophonix.tar.bz2
        expire_in: 1 week

deploy:staging:
    stage: deploy
    image: edbizarro/gitlab-ci-pipeline-php:7.1-alpine-lts
    only:
        - dev
    environment:
        name: staging
        url: https://dev.radiophonix.org
    before_script:
        # Installation de git pour Envoy (plus rapide que zip)
        - apt-get update
        - apt-get install -y git

        # Ajout de la clef ssh de déploiement
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - ssh-add <(echo "$STAGING_PRIVATE_KEY")
        - mkdir -p ~/.ssh
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

        # Installation de Envoy
        - composer global require laravel/envoy --prefer-source
    script:
        - ls -al
        - cp deploy/Envoy.staging.blade.php Envoy.blade.php
        - ~/.composer/vendor/bin/envoy run deploy

deploy:review:
    stage: deploy
    image: edbizarro/gitlab-ci-pipeline-php:7.1-alpine-lts
    only:
        - branches
    except:
        - master
        - dev
    environment:
        name: review/$CI_COMMIT_REF_NAME
        url: http://$CI_ENVIRONMENT_SLUG.radiophonix.org
        on_stop: stop:review
    before_script:
        # Installation de git pour Envoy (plus rapide que zip)
        - apt-get update
        - apt-get install -y git

        # Ajout de la clef ssh de déploiement
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - ssh-add <(echo "$REVIEWS_PRIVATE_KEY")
        - mkdir -p ~/.ssh
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

        # Installation de Envoy
        - composer global require laravel/envoy --prefer-source
    script:
        # Chaque release est dans un dossier nommé selon le slug de la review
        - echo $CI_ENVIRONMENT_SLUG
        - cp deploy/Envoy.review.blade.php Envoy.blade.php
        - ~/.composer/vendor/bin/envoy run deploy --slug=$CI_ENVIRONMENT_SLUG

stop:review:
    stage: deploy
    only:
        - branches
    except:
        - master
        - dev
    when: manual
    environment:
        name: review/$CI_COMMIT_REF_NAME
        action: stop
    variables:
        GIT_STRATEGY: none
    before_script:
        # Ajout de la clef ssh de déploiement
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
        - eval $(ssh-agent -s)
        - ssh-add <(echo "$REVIEWS_PRIVATE_KEY")
        - mkdir -p ~/.ssh
        - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    script:
        # Chaque release est dans un dossier nommé selon le slug de la review
        - foldername=$CI_ENVIRONMENT_SLUG

        # On supprime le dossier de la release
        - ssh -p22 runcloud@radiophonix.org 'rm -rf webapps/reviews-site/"'$foldername'"'
